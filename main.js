(()=>{"use strict";var __webpack_modules__={810:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"hM\": () => (/* binding */ idProfile),\n  \"kW\": () => (/* binding */ openFullsizeImage),\n  \"ig\": () => (/* binding */ popupConfirmationDeletion)\n});\n\n// UNUSED EXPORTS: formAddingPlace, linkCardForm, nameCardForm, popupAddingPlace, popupElements, popupErrorLink, prepareDataPopupPhoto, preparePopupEditingProfile, profile, saveNewCard\n\n;// CONCATENATED MODULE: ./src/components/utils.js\nfunction checkButton(evt, text) {\n  var textBtn = evt.target.querySelector('.submit');\n  textBtn.textContent = text;\n}\nvar loadImage = function loadImage(url) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n    img.src = url;\n    img.addEventListener('load', function () {\n      return resolve(url);\n    });\n    img.addEventListener('error', function (err) {\n      return reject(err);\n    });\n  });\n};\n\n// Старушка Шапокляк\n// Тварить злы. Кто людям помогает - тот тратит время зря. Хорошими делами прославиться нельзя.\n;// CONCATENATED MODULE: ./src/components/api.js\n// : Токен: 3BmSRqjRZYsE2r3pW6NrQ\n// : Идентификатор группы: plus-cohort-22\n\nfunction onResponse(res) {\n  return res.ok ? res.json() : Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n}\nvar dataServer = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-20',\n  headers: {\n    authorization: '639adf4e-3336-4963-8d2d-dff255a402e3',\n    'Content-Type': 'application/json'\n  }\n};\nfunction getContentServer() {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards\"), {\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;\nfunction getDataProfile() {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me\"), {\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;\nfunction saveDataProfile(name, about) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(onResponse);\n}\n;\nfunction saveAvatarProfile(avatar) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(onResponse);\n}\n;\nfunction saveNewCardServer(name, link) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(onResponse);\n}\n;\nfunction deleteCardServer(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/\").concat(id), {\n    method: 'DELETE',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;\nfunction addLikeServer(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'PUT',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;\nfunction removeLikeServer(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'DELETE',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;\n;// CONCATENATED MODULE: ./src/components/modal.js\n// :открытие и закрытие модального окна\nfunction openPopup(targetPopup) {\n  setListenerOnEscape();\n  targetPopup.classList.add('popup_opened');\n}\n;\nfunction closePopup(targetPopup) {\n  removeListenerOnEscape();\n  targetPopup.classList.remove('popup_opened');\n}\n;\nfunction findOpenedPopup() {\n  return document.querySelector('.popup_opened');\n}\nfunction closeOpenedPopupByEsc(evt) {\n  if (evt.code === 'Escape') {\n    closePopup(findOpenedPopup());\n  }\n}\nvar setListenerOnEscape = function setListenerOnEscape() {\n  return document.addEventListener('keydown', closeOpenedPopupByEsc);\n};\nvar removeListenerOnEscape = function removeListenerOnEscape() {\n  return document.removeEventListener('keydown', closeOpenedPopupByEsc);\n};\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\n\n\nvar formTemplate = document.querySelector('#forms').content;\nvar card_elements = document.querySelector('.elements');\nvar checkButtonHeart = function checkButtonHeart(likes) {\n  return likes.find(function (like) {\n    return like._id === idProfile._id;\n  });\n};\nfunction deleteCardOnPage(id) {\n  // : удаление карточки из блока elements\n  document.querySelector(\"[data-id='\".concat(id, \"']\")).remove();\n}\n;\nfunction startPreparingDeletion(evt) {\n  popupConfirmationDeletion.dataset.deleteCard = evt.target.closest('.element').dataset.id;\n  openPopup(popupConfirmationDeletion);\n}\n;\nfunction countLikes(card) {\n  return card.likes.length === 0 ? '' : card.likes.length;\n}\n;\nvar createElement = function createElement(card) {\n  // : Ф создания блока \"element\"\n  var cardElement = formTemplate.querySelector('.element').cloneNode(true);\n  var imageElement = cardElement.querySelector('.element__image');\n  var likesElement = cardElement.querySelector('.element__likes');\n  var deleteElement = cardElement.querySelector('.element__button-delete');\n  var buttonHeart = cardElement.querySelector('.element__button-heart');\n  cardElement.dataset.id = card._id;\n  checkButtonHeart(card.likes) && buttonHeart.classList.add('element__button-heart_active');\n  card.owner._id === idProfile._id ? cardElement.querySelector('.element__button-delete').addEventListener('click', startPreparingDeletion) : deleteElement.classList.add('element__button-delete_disabled');\n  likesElement.textContent = countLikes(card);\n  cardElement.querySelector('.element__title').textContent = card.name;\n  imageElement.src = card.link;\n  imageElement.alt = card.name;\n  cardElement.querySelector('.element__button-heart').addEventListener('click', handleLike);\n  imageElement.addEventListener('click', openFullsizeImage);\n  return cardElement;\n};\nvar addCardInBlockElements = function addCardInBlockElements(cardElement) {\n  // : ф добавления \"element\"\n  card_elements.prepend(cardElement);\n};\nfunction deleteCard(id, evt) {\n  // : удаление карточки\n  checkButton(evt, 'Удаляется...');\n  deleteCardServer(id).then(function () {\n    deleteCardOnPage(id);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return checkButton(evt, 'Да');\n  });\n}\n;\nvar indicateLike = function indicateLike(card, evt) {\n  // : отображение лайка на странице\n  var numberLikes = evt.target.parentNode.querySelector('.element__likes');\n  numberLikes.textContent = countLikes(card);\n  checkButtonHeart(card.likes) ? evt.target.classList.add('element__button-heart_active') : evt.target.classList.remove('element__button-heart_active');\n};\nfunction handleLike(evt) {\n  // : обработка лайка\n  var id = evt.target.closest('.element').dataset.id;\n  if (evt.target.classList.contains('element__button-heart_active')) {\n    removeLikeServer(id).then(function (res) {\n      return indicateLike(res, evt);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } else {\n    addLikeServer(id).then(function (res) {\n      return indicateLike(res, evt);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n  ;\n}\n;\n;// CONCATENATED MODULE: ./src/components/datacard.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Челябинская область',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Байкал',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\n}];\n\n/*  ссылка на тестовое изображение\r\nhttps://gohtml.ru/images/news/151--15-10-03--21-21-00.jpg\r\n*/\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// import { popupElements } from \"../index.js\";\n\nfunction setListenerInputs(formPopup, popupElements) {\n  var saveBtn = formPopup.querySelector(popupElements.saveButton);\n  var inputs = _toConsumableArray(formPopup.querySelectorAll(popupElements.input));\n  switchSaveButton(inputs, saveBtn, popupElements);\n  inputs.forEach(function (input) {\n    input.addEventListener('input', function () {\n      isValid(input, formPopup, popupElements);\n      switchSaveButton(inputs, saveBtn, popupElements);\n    });\n  });\n}\n;\nfunction initiateForms(popupElements) {\n  var forms = _toConsumableArray(document.querySelectorAll(popupElements.form));\n  forms.forEach(function (formPopup) {\n    setListenerInputs(formPopup, popupElements);\n  });\n}\n;\nvar showInputError = function showInputError(element, formPopup, popupElements) {\n  var err = formPopup.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.add(popupElements.inputErrorModifier);\n  err.classList.add(popupElements.textErrorModifier);\n  err.textContent = element.validationMessage;\n};\nvar hideInputError = function hideInputError(element, formPopup, popupElements) {\n  var err = formPopup.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.remove(popupElements.inputErrorModifier);\n  err.classList.remove(popupElements.textErrorModifier);\n};\nvar isValid = function isValid(input, formPopup, popupElements) {\n  input.validity.patternMismatch ? input.setCustomValidity(input.dataset.errorMessageType) //console.log('не правильно')\n  : input.setCustomValidity(''); //console.log('правильно ')\n\n  !input.validity.valid ? showInputError(input, formPopup, popupElements) : hideInputError(input, formPopup, popupElements);\n};\nfunction checkFields(inputs) {\n  return inputs.some(function (input) {\n    return !input.validity.valid;\n  });\n}\n;\nfunction switchSaveButton(inputs, saveBtn, popupElements) {\n  checkFields(inputs) ? saveBtn.classList.add(popupElements.disablingModifierButton, saveBtn.disabled = true) : saveBtn.classList.remove(popupElements.disablingModifierButton, saveBtn.disabled = false);\n}\n;\nfunction cleareInputs(inputs, form, popupElements) {\n  inputs.forEach(function (element) {\n    element.value = '';\n    hideInputError(element, form, popupElements);\n  });\n}\n;\nfunction prepareForm(form, popupElements) {\n  var inputs = _toConsumableArray(form.querySelectorAll(popupElements.input));\n  var saveBtn = form.querySelector(popupElements.saveButton);\n  cleareInputs(inputs, form, popupElements);\n  switchSaveButton(inputs, saveBtn, popupElements);\n}\n;\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar idProfile = {};\nvar popupElements = {\n  form: '.form',\n  input: '.popup__input',\n  saveButton: '.popup__save-button',\n  disablingModifierButton: 'popup__save-button_disabled',\n  inputErrorModifier: 'popup__input_error',\n  // красная линия\n  textErrorModifier: 'popup__input-error_active' // текст ошибки\n};\n\nvar profile = document.querySelector('.profile');\n\n// : попапы\nvar popupFullsizeImage = document.querySelector('.popup-photo-fullsize');\nvar popupAddingPlace = document.querySelector('.popup-add-place');\nvar popupEditingProfile = document.querySelector('.popup-edit-profile');\nvar popupEditingAvatar = document.querySelector('.popup-edit-avatar');\nvar popupErrorLink = document.querySelector('.popup-error-link');\n// export const popupDeleteCard = document.querySelector('.popup-delete-card')\nvar popupConfirmationDeletion = document.querySelector('.popup-delete-card');\n\n// : формы\nvar formEditingProfile = document.getElementById('edit-profile');\nvar formAddingPlace = document.getElementById('add-place');\nvar formEditingAvatar = document.getElementById('edit-avatar');\nvar formConfirmationDeletion = document.getElementById('delete-card');\nvar formPopupErrorLink = document.getElementById('error-link');\n\n// : профиль\nvar inputFormName = formEditingProfile.querySelector('#input-name');\nvar inputFormProfession = formEditingProfile.querySelector('#input-profession');\nvar nameProfile = profile.querySelector('.profile__name');\nvar professionProfile = profile.querySelector('.profile__profession');\nvar avatarProfile = document.querySelector('.profile__avatar');\nvar linkFormAvatar = document.getElementById('input-link-avatar');\n\n// : карточки\nvar nameCardForm = formAddingPlace.querySelector('#input-title');\nvar linkCardForm = formAddingPlace.querySelector('#input-link');\nvar saveButtonFormProfile = popupEditingProfile.querySelector(popupElements.saveButton);\nvar popupPhoto = popupFullsizeImage.querySelector('.popup__photo');\nvar popupCaption = popupFullsizeImage.querySelector('.popup__caption');\nvar closingButtons = document.querySelectorAll('.popup__close-button');\nvar popupOverlayBtns = document.querySelectorAll('.overlay');\nvar addingButton = document.querySelector('.profile__add-button');\nvar editingButton = document.querySelector('.profile__edit-button');\nfunction preparePopupEditingProfile() {\n  inputFormName.value = nameProfile.textContent;\n  inputFormProfession.value = professionProfile.textContent;\n  switchSaveButton([inputFormName, inputFormProfession], saveButtonFormProfile, popupElements);\n}\n;\nfunction prepareDataPopupPhoto(evt) {\n  popupPhoto.src = evt.target.src;\n  popupCaption.textContent = evt.target.textContent;\n}\n;\nfunction openFullsizeImage(evt) {\n  prepareDataPopupPhoto(evt);\n  openPopup(popupFullsizeImage);\n}\n;\nfunction handleDataProfile() {\n  nameProfile.textContent = inputFormName.value;\n  professionProfile.textContent = inputFormProfession.value;\n}\n;\n\n// : кнопка редактирования профиля\neditingButton.addEventListener('click', function (evt) {\n  evt.preventDefault();\n  prepareForm(formEditingProfile, popupElements);\n  preparePopupEditingProfile();\n  openPopup(popupEditingProfile);\n});\n\n// : сохранения данных профиля\nformEditingProfile.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  handleDataProfile();\n  closePopup(popupEditingProfile);\n});\n\n// : кнопка открытия формы добавления элемента\naddingButton.addEventListener('click', function () {\n  prepareForm(formAddingPlace, popupElements);\n  openPopup(popupAddingPlace);\n});\n\n// : \"кнопка\" создания элемента\nformAddingPlace.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  saveNewCard(evt);\n});\npopupOverlayBtns.forEach(function (overlayBtn) {\n  overlayBtn.addEventListener('mousedown', function (evt) {\n    if (evt.target === overlayBtn) {\n      evt.stopPropagation();\n      closePopup(overlayBtn);\n    }\n  });\n});\nclosingButtons.forEach(function (closingBtn) {\n  var targetPopup = closingBtn.closest('.popup');\n  closingBtn.addEventListener('click', function () {\n    closePopup(targetPopup);\n  });\n});\n\n// : кнопка редактирования аватара\nvar editingAvatarButton = profile.querySelector('.profile__button-edit-avatar');\neditingAvatarButton.addEventListener('click', function () {\n  prepareForm(formEditingAvatar, popupElements);\n  openPopup(popupEditingAvatar);\n});\n\n// : кнопка сохранения аватара\nformEditingAvatar.addEventListener('submit', function (evt) {\n  evt.stopPropagation();\n  evt.preventDefault();\n  editAvatar(linkFormAvatar.value, evt);\n});\n\n// : сохранения данных профиля\nformEditingProfile.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  editProfile(inputFormName.value, inputFormProfession.value, evt);\n});\n\n// : кнопка подтверждения удаления\nformConfirmationDeletion.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  deleteCard(popupConfirmationDeletion.dataset.deleteCard, evt);\n  closePopup(popupConfirmationDeletion);\n});\n\n// : кнопка повторной попытки загрузить изображение\nformPopupErrorLink.addEventListener('submit', function (evt) {\n  evt.preventDefault();\n  closePopup(popupErrorLink);\n  var targetPopup = document.getElementById(popupErrorLink.dataset.targetPopup);\n  var targetForm = document.querySelector(\".\".concat(popupErrorLink.dataset.targetPopup, \"__form\"));\n  prepareForm(targetForm, popupElements);\n  openPopup(targetPopup);\n});\n\n//ANCHOR  : новая карточка\n\nfunction saveNewCard(evt) {\n  // : добавление карточки\n  var nameCard = nameCardForm.value;\n  var linkCard = linkCardForm.value;\n  loadImage(linkCard).then(function () {\n    checkButton(evt, 'Создаётся...');\n    saveNewCardServer(nameCard, linkCard).then(function (res) {\n      closePopup(popupAddingPlace);\n      addCardInBlockElements(createElement(res));\n    }).catch(function (err) {\n      return console.log(err);\n    }).finally(function () {\n      return checkButton(evt, 'Создать');\n    });\n  }).catch(function () {\n    popupErrorLink.dataset.targetPopup = popupAddingPlace.id;\n    closePopup(popupAddingPlace);\n    openPopup(popupErrorLink);\n  });\n}\n;\n\n// : ======  создание и редактирование данных профиля ======\n\nvar fillInIdProfile = function fillInIdProfile(id) {\n  return idProfile._id = id;\n};\nfunction fillInDataProfile(data) {\n  // : заполнение полей блока profile\n  nameProfile.textContent = data.name;\n  professionProfile.textContent = data.about;\n  avatarProfile.src = data.avatar;\n  avatarProfile.alt = data.name;\n}\n;\nfunction editAvatar(link, evt) {\n  // : редактирование аватара\n  loadImage(link).then(function () {\n    checkButton(evt, 'Сохраняю...');\n    saveAvatarProfile(link).then(function (res) {\n      fillInDataProfile(res);\n      closePopup(popupEditingAvatar);\n    }).catch(function (err) {\n      return console.log(err);\n    }).finally(function () {\n      return checkButton(evt, 'Сохранить');\n    });\n  }).catch(function () {\n    popupErrorLink.dataset.targetPopup = popupEditingAvatar.id;\n    closePopup(popupEditingAvatar);\n    openPopup(popupErrorLink);\n  });\n}\n;\nfunction editProfile(name, about, evt) {\n  // : редактирование данных профиля\n  checkButton(evt, 'Сохраняю...');\n  saveDataProfile(name, about).then(function (res) {\n    fillInDataProfile(res);\n    closePopup(popupEditingProfile);\n  }).catch(function (err) {\n    return console.log(err);\n  }).finally(function () {\n    return checkButton(evt, 'Сохранить');\n  });\n}\n;\nfunction initiateCard() {\n  // : загрузка картинок\n  getContentServer().then(function (cards) {\n    return cards.reduceRight(function (_, card) {\n      loadImage(card.link).then(function () {\n        addCardInBlockElements(createElement(card));\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }, null);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n;\nfunction initiateProfile() {\n  // : загрузка данных профиля\n  getDataProfile().then(function (res) {\n    fillInIdProfile(res._id);\n    fillInDataProfile(res);\n    return idProfile._id !== undefined;\n  }).then(function (res) {\n    res ? initiateCard() : console.log(\"ERROR: ID Profile - \".concat(idProfile._id, \".\"));\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n;\n\n// : активация данных\n\ninitiateProfile();\ninitiateForms(popupElements);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///810\n")}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[810](0,__webpack_exports__,__webpack_require__)})();