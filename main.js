(()=>{"use strict";var __webpack_modules__={298:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar popupElements = {\n  form: '.form',\n  input: '.popup__input',\n  saveButton: '.popup__save-button',\n  disablingModifierButton: 'popup__save-button_disabled',\n  inputErrorModifier: 'popup__input_error',\n  // красная линия\n  textErrorModifier: 'popup__input-error_active' // текст ошибки\n};\n\nvar initInputs = function initInputs(formPopup, popupElements) {\n  var saveBtn = formPopup.querySelector(popupElements.saveButton);\n  var inputs = _toConsumableArray(formPopup.querySelectorAll(popupElements.input));\n  switchingSaveButton(inputs, saveBtn, popupElements);\n  inputs.forEach(function (input) {\n    input.addEventListener('input', function () {\n      isValid(input, formPopup, popupElements);\n      switchingSaveButton(inputs, saveBtn, popupElements);\n    });\n  });\n};\nfunction initForms(popupElements) {\n  var forms = _toConsumableArray(document.querySelectorAll(popupElements.form));\n  forms.forEach(function (formPopup) {\n    formPopup.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    initInputs(formPopup, popupElements);\n  });\n}\nvar showInputError = function showInputError(element, formPopup, popupElements) {\n  var err = formPopup.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.add(popupElements.inputErrorModifier);\n  err.classList.add(popupElements.textErrorModifier);\n  err.textContent = element.validationMessage;\n};\nvar hideInputError = function hideInputError(element, formPopup, popupElements) {\n  var err = formPopup.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.remove(popupElements.inputErrorModifier);\n  err.classList.remove(popupElements.textErrorModifier);\n};\nvar isValid = function isValid(input, formPopup, popupElements) {\n  console.log(\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \".concat(200 - input.value.length, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"));\n  input.validity.patternMismatch ? input.setCustomValidity(input.dataset.errorMessageType) //console.log('не правильно')\n  : input.setCustomValidity(''); //console.log('правильно ')\n\n  !input.validity.valid ? showInputError(input, formPopup, popupElements) : hideInputError(input, formPopup, popupElements);\n};\nfunction checkFields(inputs) {\n  return inputs.some(function (input) {\n    return !input.validity.valid;\n  });\n}\n;\nfunction switchingSaveButton(inputs, saveBtn, popupElements) {\n  checkFields(inputs) ? saveBtn.classList.add(popupElements.disablingModifierButton) : saveBtn.classList.remove(popupElements.disablingModifierButton);\n}\nfunction cleareInputs(popupElements) {\n  setTimeout(function () {\n    return document.querySelectorAll(popupElements.input).forEach(function (element) {\n      element.value = '';\n      var formPopup = element.closest('.form');\n      hideInputError(element, formPopup, popupElements);\n    });\n  }, 1000);\n}\n;\ninitForms(popupElements);\n;// CONCATENATED MODULE: ./src/components/profile.js\n// export const inputFormName = formEditingProfile.querySelector('#input-name');\n// export const inputFormProfession = formEditingProfile.querySelector('#input-profession');\n\nvar profile = document.querySelector('.profile');\nvar nameProfile = profile.querySelector('.profile__name');\nvar professionProfile = profile.querySelector('.profile__profession');\n\n// : Ф сохранения данных из формы ввода\nfunction saveProfile(evt) {\n  if (inputFormName.value === \"\") {\n    alert(\"У Вас должно быть имя!\");\n  } else {\n    nameProfile.textContent = inputFormName.value;\n    professionProfile.textContent = inputFormProfession.value;\n    closePopup(popupEditingProfile);\n  }\n}\n;\n;// CONCATENATED MODULE: ./src/components/modal.js\n\n\nvar page = document.querySelector('.page');\nvar popupAddingPlace = document.querySelector('.popup-add-place');\nvar popupEditingProfile = document.querySelector('.popup-edit-profile');\nvar popupFullsizeImage = document.querySelector('.popup-photo-fullsize');\n\n// : формы\nvar formEditingProfile = document.getElementById('edit-profile');\nvar formAddingPlace = document.getElementById('add-place');\n\n// : переменные редактирования профиля\nvar inputFormName = formEditingProfile.querySelector('#input-name');\nvar inputFormProfession = formEditingProfile.querySelector('#input-profession');\n\n// : Ф открытия формы редактирования профиля\nfunction openPopupEditingProfile(evt) {\n  var saveButton = popupEditingProfile.querySelector(popupElements.saveButton);\n  inputFormName.value = nameProfile.textContent;\n  inputFormProfession.value = professionProfile.textContent;\n  switchingSaveButton([inputFormName, inputFormProfession], saveButton, popupElements);\n  openPopup(popupEditingProfile);\n}\n;\n\n// : Ф открытие модального окна с полноразмерным изображением\nvar popupPhoto = popupFullsizeImage.querySelector('.popup__photo');\nvar popupCaption = popupFullsizeImage.querySelector('.popup__caption');\nfunction openPopupPhoto(evt) {\n  popupPhoto.src = evt.target.src;\n  popupPhoto.alt = evt.target.textContent;\n  popupCaption.textContent = evt.target.textContent;\n  openPopup(popupFullsizeImage);\n}\n;\n\n// :кнопка закрытия формы\nvar closingButtons = document.querySelectorAll('.popup__close-button');\nclosingButtons.forEach(function (closingBtn) {\n  closingBtn.addEventListener('click', function () {\n    closePopup(closingBtn.closest('.overlay'));\n    cleareInputs(popupElements);\n  });\n});\n\n// : \"кнопка\" закрытия модального окна по клику на overlay\nvar popupOverlay = document.querySelectorAll('.overlay');\npopupOverlay.forEach(function (overlayBtn) {\n  if (overlayBtn.classList.contains('overlay')) {\n    overlayBtn.addEventListener('click', function (evt) {\n      if (evt.target === overlayBtn) {\n        evt.stopPropagation();\n        closePopup(overlayBtn);\n        cleareInputs(popupElements);\n      }\n    });\n  }\n});\n\n// :открытие и закрытие модального окна\nfunction openPopup(targetPopup) {\n  page.addEventListener('keydown', closeOpenedPopupByEsc);\n  targetPopup.classList.add('popup_opened');\n}\n;\nfunction closePopup(targetPopup) {\n  page.removeEventListener('keydown', closeOpenedPopupByEsc);\n  targetPopup.classList.remove('popup_opened');\n}\n;\nfunction findOpenedPopup() {\n  return document.querySelector('.popup_opened');\n}\nfunction closeOpenedPopupByEsc(evt) {\n  if (evt.code == 'Escape') {\n    closePopup(findOpenedPopup());\n    cleareInputs(popupElements);\n  }\n}\n;// CONCATENATED MODULE: ./src/components/datacard.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Челябинская область',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Байкал',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\n}];\n\n/*  ссылка на тестовое изображение\r\nhttps://gohtml.ru/images/news/151--15-10-03--21-21-00.jpg\r\n*/\n;// CONCATENATED MODULE: ./src/components/card.js\n\n\nvar card_elements = document.querySelector('.elements');\nfunction postData(evt) {\n  evt.preventDefault();\n  var nameCard = formAddingPlace.querySelector('#input-title').value; // nameCardForm.value;\n  var linkCard = formAddingPlace.querySelector('#input-link').value; //linkCardForm.value;\n\n  if (linkCard === \"\") {\n    alert('Поле \"Ссылка на изображение\" должно быть заполнено!');\n  } else {\n    addElement(createElement(nameCard, linkCard));\n    closePopup(popupAddingPlace);\n  }\n}\n;\nfunction deleteCard(evt) {\n  evt.target.closest('.element').remove();\n}\n;\nfunction likeCard(evt) {\n  evt.target.classList.toggle('element__button-heart_active');\n}\n;\n\n// : Ф создания блока \"element\"\nvar createElement = function createElement(nameCard, linkCard) {\n  var formTemplate = document.querySelector('#forms').content;\n  var elementForm = formTemplate.querySelector('.element').cloneNode(true);\n  var imageElement = elementForm.querySelector('.element__image');\n  elementForm.querySelector('.element__title').textContent = nameCard;\n  imageElement.src = linkCard;\n  imageElement.textContent = nameCard;\n  return elementForm;\n};\n\n// : ф добавления \"element\"\nvar addElement = function addElement(elementForm) {\n  card_elements.prepend(elementForm);\n};\n\n// : цикл для считывания данных из массива карточек\ninitialCards.forEach(function (card) {\n  addElement(createElement(card.name, card.link));\n});\n;// CONCATENATED MODULE: ./src/components/index.js\n\n\n\nfunction installListener() {\n  var elements = document.querySelector('.elements');\n  elements.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('element__button-heart')) {\n      evt.stopPropagation();\n\n      // likeCard(evt.target.closest('.element').dataset.id, evt);\n      likeCard(evt);\n    }\n    if (evt.target.classList.contains('element__button-delete')) {\n      evt.stopPropagation();\n      // popupDeleteCard.dataset.deleteCard = evt.target.closest('.element').dataset.id;\n      // openPopup(popupDeleteCard)\n      deleteCard(evt);\n    }\n    if (evt.target.classList.contains('element__image')) {\n      evt.stopPropagation();\n      openPopupPhoto(evt);\n    }\n  });\n\n  // : кнопка редактирования профиля\n  var editingButton = document.querySelector('.profile__edit-button');\n  editingButton.addEventListener('click', function (evt) {\n    evt.preventDefault();\n    openPopupEditingProfile(evt);\n  });\n\n  // : сохранения данных профиля\n  formEditingProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    saveProfile(evt);\n  });\n\n  // : кнопка открытия формы добавления элемента\n  var addingButton = document.querySelector('.profile__add-button');\n  addingButton.addEventListener('click', function () {\n    openPopup(popupAddingPlace);\n  });\n\n  // : \"кнопка\" создания элемента\n  formAddingPlace.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    postData(evt);\n    evt.target.reset();\n  });\n}\n;\ninstallListener();\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///298\n")}},__webpack_exports__={};__webpack_modules__[298]()})();