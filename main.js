(()=>{"use strict";var __webpack_modules__={902:()=>{eval("\n;// CONCATENATED MODULE: ./src/components/validate.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar initInputs = function initInputs(form) {\n  var saveButton = form.querySelector('.popup__save-button');\n  var inputs = _toConsumableArray(form.querySelectorAll('.popup__input'));\n  switchingSaveButton(inputs, saveButton);\n  inputs.forEach(function (input) {\n    input.addEventListener('input', function () {\n      isValid(input, form);\n      switchingSaveButton(inputs, saveButton);\n    });\n  });\n};\nfunction initForms() {\n  var forms = _toConsumableArray(document.querySelectorAll('.form'));\n  forms.forEach(function (form) {\n    form.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    initInputs(form);\n  });\n}\nvar showInputError = function showInputError(element, form) {\n  var err = form.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.add('popup__input_error');\n  err.classList.add('popup__input-error_active');\n  err.textContent = element.validationMessage;\n};\nvar hideInputError = function hideInputError(element, form) {\n  var err = form.querySelector(\".\".concat(element.id, \"-error\"));\n  element.classList.remove('popup__input_error');\n  err.classList.remove('popup__input-error_active');\n};\nvar isValid = function isValid(input, form) {\n  console.log(\"\\u041E\\u0441\\u0442\\u0430\\u043B\\u043E\\u0441\\u044C \".concat(200 - input.value.length, \" \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432\"));\n  input.validity.patternMismatch ? input.setCustomValidity(input.dataset.errorMessageType) //console.log('не правильно')\n  : input.validity.tooShort ? input.setCustomValidity(input.dataset.errorMessageLength) : input.setCustomValidity(''); //console.log('правильно ')\n\n  !input.validity.valid ? showInputError(input, form) : hideInputError(input, form);\n};\nfunction checkFields(inputs) {\n  return inputs.some(function (input) {\n    return !input.validity.valid;\n  });\n}\n;\nfunction switchingSaveButton(inputs, saveButton) {\n  checkFields(inputs) ? saveButton.classList.add('popup__save-button_disabled') : saveButton.classList.remove('popup__save-button_disabled');\n}\nfunction cleareInputs() {\n  setTimeout(function () {\n    return document.querySelectorAll('.popup__input').forEach(function (element) {\n      return element.value = '';\n    });\n  }, 1000);\n}\ninitForms();\n;// CONCATENATED MODULE: ./src/components/modal.js\n\nvar popupAddingPlace = document.querySelector('.popup-add-place');\nvar popupEditingProfile = document.querySelector('.popup-edit-profile');\nvar popupEditingAvatar = document.querySelector('.popup-edit-avatar');\nvar popupErrorAvatar = document.querySelector('.popup-error-avatar');\nvar popupDeleteCard = document.querySelector('.popup-delete-card');\nvar popupFullsizeImage = document.querySelector('.popup-photo-fullsize');\n\n// : Ф открытия формы редактирования профиля\nfunction openPopupEditingProfile() {\n  var saveButton = popupEditingProfile.querySelector('.popup__save-button');\n  var nameProfile = document.querySelector('.profile__name');\n  var professionProfile = document.querySelector('.profile__profession');\n  var inputFormName = document.querySelector('#input-name');\n  var inputFormProfession = document.querySelector('#input-profession');\n  inputFormName.value = nameProfile.textContent;\n  inputFormProfession.value = professionProfile.textContent;\n  switchingSaveButton([inputFormName, inputFormProfession], saveButton);\n  openPopup(popupEditingProfile);\n}\n;\n\n// :кнопка закрытия формы\nvar closingButtons = document.querySelectorAll('.popup__close-button');\nclosingButtons.forEach(function (closingBtn) {\n  closingBtn.addEventListener('click', function () {\n    cleareInputs();\n    closePopup(closingBtn.closest('.overlay'));\n  });\n});\n\n// : \"кнопка\" закрытия модального окна по клику на overlay\nvar popupOverlay = document.querySelectorAll('.overlay');\npopupOverlay.forEach(function (overlayBtn) {\n  if (overlayBtn.classList.contains('overlay')) {\n    overlayBtn.addEventListener('click', function (evt) {\n      if (evt.target === overlayBtn) {\n        evt.stopPropagation();\n        cleareInputs();\n        closePopup(overlayBtn);\n      }\n    });\n  }\n});\nvar createPopupFullsizePhoto = function createPopupFullsizePhoto(evt) {\n  var popupPhoto = popupFullsizeImage.querySelector('.popup__photo');\n  var popupCaption = popupFullsizeImage.querySelector('.popup__caption');\n  popupPhoto.src = evt.target.src;\n  popupPhoto.alt = evt.target.textContent;\n  popupCaption.textContent = evt.target.textContent;\n};\nvar openPopupPhoto = function openPopupPhoto(evt) {\n  createPopupFullsizePhoto(evt);\n  openPopup(popupFullsizeImage);\n};\nfunction findOpenedPopup() {\n  return document.querySelector('.popup_opened');\n}\n\n// :открытие и закрытие модального окна\nfunction openPopup(targetPopup) {\n  targetPopup.classList.add('popup_opened');\n}\n;\nfunction closePopup(targetPopup) {\n  targetPopup.classList.remove('popup_opened');\n}\n;\nvar closeOpenedPopupByEsc = function closeOpenedPopupByEsc() {\n  closePopup(findOpenedPopup());\n  cleareInputs();\n};\n;// CONCATENATED MODULE: ./src/components/api.js\n// : Токен: 639adf4e-3336-4963-8d2d-dff255a402e3\n// : Идентификатор группы: plus-cohort-20\n\nfunction onResponse(res) {\n  return res.ok ? res.json() : Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));\n}\nvar dataServer = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-20',\n  headers: {\n    authorization: '639adf4e-3336-4963-8d2d-dff255a402e3',\n    'Content-Type': 'application/json'\n  }\n};\nfunction getContentServer() {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards\"), {\n    headers: dataServer.headers\n  }).then(onResponse);\n}\nfunction getDataProfile() {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me\"), {\n    headers: dataServer.headers\n  }).then(onResponse);\n}\nfunction saveDataProfile(name, about) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me\"), {\n    method: 'PATCH',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      name: name,\n      about: about\n    })\n  }).then(onResponse);\n}\nfunction saveAvatarProfile(avatar) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/users/me/avatar\"), {\n    method: 'PATCH',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      avatar: avatar\n    })\n  }).then(onResponse);\n}\nfunction saveNewCardServer(name, link) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards\"), {\n    method: 'POST',\n    headers: dataServer.headers,\n    body: JSON.stringify({\n      name: name,\n      link: link\n    })\n  }).then(onResponse);\n}\nfunction deleteCardServer(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/\").concat(id), {\n    method: 'DELETE',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\nfunction addLike(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'PUT',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\nfunction removeLike(id) {\n  return fetch(\"\".concat(dataServer.baseUrl, \"/cards/likes/\").concat(id), {\n    method: 'DELETE',\n    headers: dataServer.headers\n  }).then(onResponse);\n}\n;// CONCATENATED MODULE: ./src/components/utils.js\nfunction checkButton(evt, text, timeout) {\n  var textBtn = evt.target.querySelector('.submit');\n  setTimeout(function () {\n    textBtn.textContent = text;\n  }, timeout);\n}\nvar loadImage = function loadImage(src) {\n  return new Promise(function (resolve, reject) {\n    var img = new Image();\n    img.onload = function () {\n      return resolve(img);\n    };\n    img.onerror = reject;\n    img.src = src;\n  });\n};\n;// CONCATENATED MODULE: ./src/components/profile.js\n\n\n\n\nvar profile = document.querySelector('.profile');\n\n// : кнопка редактирования профиля\nvar editingButton = profile.querySelector('.profile__edit-button');\neditingButton.addEventListener('click', openPopupEditingProfile);\n\n// : кнопка открытия формы добавления элемента\nvar addingButton = profile.querySelector('.profile__add-button');\naddingButton.addEventListener('click', function () {\n  openPopup(popupAddingPlace);\n});\n\n// : кнопка редактирования аватара\nvar editingAvatarButton = profile.querySelector('.profile__button-edit-avatar');\neditingAvatarButton.addEventListener('click', function () {\n  return openPopup(popupEditingAvatar);\n});\nvar idProfile = {};\nvar nameProfile = document.querySelector('.profile__name');\nvar professionProfile = document.querySelector('.profile__profession');\nvar avatarProfile = document.querySelector('.profile__avatar');\nfunction createProfile(data) {\n  idProfile._id = data._id;\n  nameProfile.textContent = data.name;\n  professionProfile.textContent = data.about;\n  avatarProfile.src = data.avatar;\n  closePopup(popupEditingProfile);\n}\nfunction editAvatar(link, evt) {\n  checkButton(evt, 'Сохраняю...');\n  loadImage(link).then(function () {\n    saveAvatarProfile(link).then(function (res) {\n      createProfile(res);\n      closePopup(popupEditingAvatar);\n      checkButton(evt, 'Сохранить', 1000);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }).catch(function () {\n    closePopup(popupEditingAvatar);\n    openPopup(popupErrorAvatar);\n    checkButton(evt, 'Сохранить', 1000);\n  });\n}\n;\nfunction editProfile(name, about, evt) {\n  checkButton(evt, 'Сохраняю...');\n  saveDataProfile(name, about).then(function (res) {\n    createProfile(res);\n    checkButton(evt, 'Сохранить', 1000);\n  }).catch(function (err) {\n    console.log(err);\n    checkButton(evt, 'Сохранить', 1000);\n  });\n  cleareInputs();\n}\nfunction initialProfile() {\n  getDataProfile().then(function (res) {\n    // idProfile._id = res._id\n    createProfile(res);\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\n;\n\n// initialProfile()\n// initialCard()\n;// CONCATENATED MODULE: ./src/components/cards.js\n\n\n\n\nvar cards_elements = document.querySelector('.elements');\nfunction initCardElement() {\n  var elements = document.querySelector('.elements');\n  elements.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('element__button-heart')) {\n      evt.stopPropagation();\n      likeCard(evt.target.closest('.element').dataset.id, evt);\n    }\n    if (evt.target.classList.contains('element__button-delete')) {\n      evt.stopPropagation();\n      popupDeleteCard.dataset.deleteCard = evt.target.closest('.element').dataset.id;\n      openPopup(popupDeleteCard);\n    }\n    if (evt.target.classList.contains('element__image')) {\n      evt.stopPropagation();\n      openPopupPhoto(evt);\n    }\n  });\n}\n;\nvar checkButtonHeart = function checkButtonHeart(likes) {\n  return likes.find(function (like) {\n    return like._id === idProfile._id;\n  });\n};\nfunction saveNewCard(evt) {\n  var nameCard = popupAddingPlace.querySelector('#input-title').value;\n  var linkCard = popupAddingPlace.querySelector('#input-link').value;\n  checkButton(evt, 'Создаётся...');\n  saveNewCardServer(nameCard, linkCard).then(function (res) {\n    addElement(createElement(res));\n    checkButton(evt, 'Создать', 1000);\n  }).catch(function (err) {\n    console.log(err);\n    checkButton(evt, 'Создать', 1000);\n  });\n}\nvar createElement = function createElement(card) {\n  var formTemplate = document.querySelector('#forms').content;\n  var elementForm = formTemplate.querySelector('.element').cloneNode(true);\n  var imageElement = elementForm.querySelector('.element__image');\n  var likesElement = elementForm.querySelector('.element__likes');\n  var deleteElement = elementForm.querySelector('.element__button-delete');\n  var buttonHeart = elementForm.querySelector('.element__button-heart');\n  checkButtonHeart(card.likes) ? buttonHeart.classList.add('element__button-heart_active') : '';\n  elementForm.dataset.id = card._id;\n  card.owner._id === idProfile._id ? '' : deleteElement.classList.add('element__button-delete_disabled');\n  likesElement.textContent = card.likes.length === 0 ? '' : card.likes.length;\n  elementForm.querySelector('.element__title').textContent = card.name;\n  imageElement.src = card.link;\n  imageElement.textContent = card.name;\n  return elementForm;\n};\n\n// : ф добавления \"element\"\nvar addElement = function addElement(elementForm) {\n  cards_elements.prepend(elementForm);\n};\nfunction deleteCard(id, evt) {\n  checkButton(evt, 'Удаляется...');\n  deleteCardServer(id).then(function () {\n    document.querySelector(\"[data-id='\".concat(id, \"']\")).remove();\n    checkButton(evt, 'Да', 1000);\n  }).catch(function (err) {\n    console.log(err);\n    checkButton(evt, 'Да', 1000);\n  });\n}\nvar handleLike = function handleLike(card, evt) {\n  var numberLikes = evt.target.parentNode.querySelector('.element__likes');\n  numberLikes.textContent = card.likes.length;\n  checkButtonHeart(card.likes) ? evt.target.classList.add('element__button-heart_active') : evt.target.classList.remove('element__button-heart_active');\n};\nfunction likeCard(id, evt) {\n  if (evt.target.classList.contains('element__button-heart_active')) {\n    removeLike(id).then(function (res) {\n      return handleLike(res, evt);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  } else {\n    addLike(id).then(function (res) {\n      return handleLike(res, evt);\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  }\n}\nfunction initialCard() {\n  getContentServer().then(function (data) {\n    data.forEach(function (card) {\n      loadImage(card.link).then(function () {\n        addElement(createElement(card));\n      }).catch(console.log(''));\n    });\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}\ninitCardElement();\n\n// initialProfile()\n// initialCard()\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\n\n\n\nvar page = document.querySelector('.page');\npage.addEventListener('keydown', function (evt) {\n  evt.stopPropagation();\n  if (evt.code == 'Escape') {\n    closeOpenedPopupByEsc();\n  }\n});\nfunction InitialFormListener() {\n  var formEditingProfile = document.getElementById('edit-profile');\n  var formAddingPlace = document.getElementById('add-place');\n  var formEditingAvatar = document.getElementById('edit-avatar');\n  var formErrorAvatar = document.getElementById('error-avatar');\n  var formDeleteCard = document.getElementById('delete-card');\n  var inputFormName = document.querySelector('#input-name');\n  var inputFormProfession = document.querySelector('#input-profession');\n  var inputLinkAvatar = document.querySelector('#input-link-avatar');\n\n  // : \"кнопка\" сохранения данных профиля !!!\n  formEditingProfile.addEventListener('submit', function (evt) {\n    evt.preventDefault(), editProfile(inputFormName.value, inputFormProfession.value, evt);\n  });\n\n  // : \"кнопка\" создания элемента !!!\n  formAddingPlace.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    saveNewCard(evt);\n    evt.target.reset();\n    closePopup(popupAddingPlace);\n  });\n\n  // : \"кнопка\" сохранения аватара\n  formEditingAvatar.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    editAvatar(inputLinkAvatar.value, evt);\n    evt.target.reset();\n  });\n\n  // : \"кнопка\" повторного редактирования аватара !!!\n  formErrorAvatar.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    closePopup(popupErrorAvatar);\n    openPopup(popupEditingAvatar);\n  });\n\n  // : \"кнопка\" подтверждения удаления карточки !!!\n  formDeleteCard.addEventListener('submit', function (evt) {\n    evt.preventDefault();\n    closePopup(popupDeleteCard);\n    deleteCard(popupDeleteCard.dataset.deleteCard, evt);\n  });\n}\n;\nvar loadContent = function loadContent() {\n  initialProfile();\n  initialCard();\n};\nloadContent();\nInitialFormListener();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///902\n")}},__webpack_exports__={};__webpack_modules__[902]()})();